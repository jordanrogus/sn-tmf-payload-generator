<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_648117_tmf_mock.CoreOrderDataInitializationService</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Set of functions to support setting up the Core Order Data for a Payload Generator record.</description>
        <name>CoreOrderDataInitializationService</name>
        <script><![CDATA[var CoreOrderDataInitializationService = Class.create();
CoreOrderDataInitializationService.prototype = {
    initialize: function() {
        this.utilsSI = new x_648117_tmf_mock.Utils();
		this.initializationUtilsSI = new x_648117_tmf_mock.InitializationUtils();
    },

    /**
     * Determines helper function to run based on the api selected in the payload generator
     * 
     * @param payloadGeneratorGr {GlideRecord object} - The payload generator record
     * @return {null}
     **/
    initializeCoreOrderData(payloadGeneratorGr) {
        if (typeof(payloadGeneratorGr) != "object") {
            return null;
        }

        var api = payloadGeneratorGr.getValue('method_and_endpoint');
        switch (api) {
            case "post_sn_ind_tmt_orm_order_productOrder":
                this._generateForTmf622productOrderPost(payloadGeneratorGr.getUniqueValue());
                break;
			default:
				gs.error(gs.getMessage("Switch statement in 'ApiParamInitializationService' Script Include found no match"));
				return null;
        }
    },

    /**
     * Initialize core order data records
     * 
     * @param payloadGeneratorSysId {string} - The payload generator record as sys_id
     * @return {null}
     **/
    _generateForTmf622productOrderPost(payloadGeneratorSysId) {
        var coreDataAttributes = Constants.CORE_DATA_ATTRIBUTE_MAP;
        for (var i = 0; i < coreDataAttributes.length; i++) {
            var insertCoreDataGr = new GlideRecord('x_648117_tmf_mock_core_order_data');
            insertCoreDataGr.newRecord();
            insertCoreDataGr.setValue('payload_generator', payloadGeneratorSysId);
            insertCoreDataGr.setValue('attribute', coreDataAttributes[i].field);
			var apiParamDefaultValue = this.initializationUtilsSI.getParamDefaultValue(coreDataAttributes[i]);
			if (apiParamDefaultValue !== null){
				insertCoreDataGr.setValue('value', apiParamDefaultValue);
			}
            insertCoreDataGr.insert();
        }
    },
    type: 'CoreOrderDataInitializationService'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-22 21:48:54</sys_created_on>
        <sys_id>e65b4e1e472b2110acf69a21336d4321</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_name>CoreOrderDataInitializationService</sys_name>
        <sys_package display_value="TMF Mock Payload Generator" source="x_648117_tmf_mock">3b03be1447232110acf69a21336d4362</sys_package>
        <sys_policy/>
        <sys_scope display_value="TMF Mock Payload Generator">3b03be1447232110acf69a21336d4362</sys_scope>
        <sys_update_name>sys_script_include_e65b4e1e472b2110acf69a21336d4321</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-07-13 16:17:18</sys_updated_on>
    </sys_script_include>
</record_update>
