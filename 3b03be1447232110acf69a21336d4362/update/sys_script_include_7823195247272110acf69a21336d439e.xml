<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_648117_tmf_mock.ProductItemUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Utility functions for the Product Item (x_648117_tmf_mock_items) table.</description>
        <name>ProductItemUtils</name>
        <script><![CDATA[var ProductItemUtils = Class.create();
ProductItemUtils.prototype = {
    initialize: function() {
        this.utilsSI = new x_648117_tmf_mock.Utils();
    },

	/**
     * Retrieves related items from a passed in item
     * 
     * @param sourceItemSysId {string} - Source item to use in query
     * @return {string} - Encoded query to return related items
     **/
    getRelatedOrderItems(sourceItemSysId) {
		if (sourceItemSysId === undefined) {
            return null;
        }
		
		var sourceItemGr = this.utilsSI.getRecordFromSysId("x_648117_tmf_mock_items", sourceItemSysId);
		var payloadGenerator = sourceItemGr.getValue('payload_generator');
		if(!payloadGenerator){return;}

        var items = [];

        var itemsGr = new GlideRecord('x_648117_tmf_mock_items');
        itemsGr.addQuery('payload_generator', payloadGenerator);
        itemsGr.addQuery('sys_id', '!=', sourceItemSysId.toString());
        itemsGr.query();
        while (itemsGr.next()) {
            items.push(itemsGr.getUniqueValue());
        }

        return 'sys_idIN' + items.toString();
    },

	/**
     * Copies an item and all child records
     * 
	 * @param itemSysId {string} - The item to copy
     * @param payloadGeneratorSysId {string} - Optionally a payload generator to use in the copied item
     * @return {string} - Sys_id of the copied item
     **/
    copyItemHierarchy(itemSysId, payloadGeneratorSysId) {
		if (itemSysId === undefined) {
            return null;
        }
		
        var itemGr = this.utilsSI.getRecordFromSysId('x_648117_tmf_mock_items', itemSysId);
        var dupItem;
        if (payloadGeneratorSysId) {
            var fieldMapItem = {
                payload_generator: payloadGeneratorSysId
            };
            dupItem = this.utilsSI.generateDuplicateRecord('x_648117_tmf_mock_items', itemSysId, fieldMapItem);
        } else {
            dupItem = this.utilsSI.generateDuplicateRecord('x_648117_tmf_mock_items', itemSysId);
        }		
        var itemRelationshipsGr = this.utilsSI.getRecords('x_648117_tmf_mock_item_relationship', 'source_item=' + itemSysId);
        if (itemRelationshipsGr) {
            while (itemRelationshipsGr.next()) {
                var fieldMapItemRelationship = {};
                if (payloadGenerator) {
                    fieldMapItemRelationship = {
                        source_item: dupItem,
                        target_item: ""
                    };
                } else {
                    fieldMapItemRelationship = {
                        source_item: dupItem
                    };
                }
                this.utilsSI.generateDuplicateRecord('x_648117_tmf_mock_item_relationship', itemRelationshipsGr.getUniqueValue(), fieldMapItemRelationship);
            }
        }
		
        var relatedPartyGr = this.utilsSI.getRecords('x_648117_tmf_mock_related_party', 'item=' + itemSysId);
        if (relatedPartyGr) {
            while (relatedPartyGr.next()) {
                var fieldMapRelatedParty = {
                    item: dupItem
                };
                this.utilsSI.generateDuplicateRecord('x_648117_tmf_mock_related_party', relatedPartyGr.getUniqueValue(), fieldMapRelatedParty);
            }
        }
    },

    type: 'ProductItemUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-22 17:40:32</sys_created_on>
        <sys_id>7823195247272110acf69a21336d439e</sys_id>
        <sys_mod_count>41</sys_mod_count>
        <sys_name>ProductItemUtils</sys_name>
        <sys_package display_value="TMF Mock Payload Generator" source="x_648117_tmf_mock">3b03be1447232110acf69a21336d4362</sys_package>
        <sys_policy/>
        <sys_scope display_value="TMF Mock Payload Generator">3b03be1447232110acf69a21336d4362</sys_scope>
        <sys_update_name>sys_script_include_7823195247272110acf69a21336d439e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-06-30 21:13:55</sys_updated_on>
    </sys_script_include>
</record_update>
